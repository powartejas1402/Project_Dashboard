{"version":3,"sources":["App.js","Form.jsx","serviceWorker.js","Search.jsx","Language.jsx","Navbar.jsx","index.js","logo.svg"],"names":["App","Form","useState","firstname","lastname","empid","msg","data","setData","file","setFile","name","setName","InputEvent","event","target","value","preValue","style","margin","textAlign","onSubmit","e","formData","FormData","append","preventDefault","console","log","alert","axios","post","then","response","catch","error","className","for","type","id","onChange","placeholder","required","selected","border","accept","rows","Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","div","paddingLeft","CustomizedInputBase","classes","Paper","component","InputBase","inputProps","IconButton","aria-label","formControl","minWidth","selectEmpty","marginTop","SimpleSelect","React","age","setAge","FormControl","InputLabel","Select","labelId","MenuItem","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","MiniDrawer","useTheme","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","color","onClick","edge","Drawer","variant","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.138abfad.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useState} from 'react';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\n\r\nconst Form = () => {\r\n\r\n    var style_form = {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n    };\r\n\r\n    const [data, setData] = useState({\r\n        firstname : '',\r\n        lastname : '',\r\n        empid : '',\r\n        msg : '',\r\n    });\r\n\r\n    const [file, setFile] = useState(); \r\n    const [name, setName] = useState();\r\n\r\n\r\n\r\n    const InputEvent = (event) => {\r\n        const {name, value} = event.target;\r\n        setData((preValue) => {\r\n            return {\r\n                ...preValue,\r\n                [name] : value, \r\n            };\r\n        });\r\n    };\r\n\r\n    const formSubmit = (e) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append('First-Name', data.firstname);\r\n        formData.append('Last-name', data.lastname);\r\n        formData.append('Employee Id', data.empid);\r\n        formData.append('File Type', file);\r\n        formData.append(`${file} Image`, name);\r\n\r\n        // let info = [data, name, file];\r\n        //console.log(formData);\r\n        e.preventDefault();\r\n        //console.log(data);\r\n        console.log(formData);\r\n        alert(`First-Name: ${data.firstname}, Last-name: ${data.lastname}, EmployeeID: ${data.empid}, Message: ${data.msg}, File-type: ${file}, File: ${name}`);\r\n\r\n\r\n        axios.post(\"https://intense-beach-75357.herokuapp.com/file\" , formData)\r\n            .then(response =>{\r\n                console.log(response)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });    \r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 style={style_form}> Send us your Files! </h1>\r\n            <form onSubmit={formSubmit}>\r\n                <div className=\"col-lg-6 p-5 col-10\">\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"firstname\" className=\"form-label\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"firstname\" name=\"firstname\" onChange={InputEvent} value={data.firstname} placeholder=\"Enter your first name\" required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"lastname\" className=\"form-label\">Last Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"lastname\" name=\"lastname\" onChange={InputEvent} value={data.lastname} placeholder=\"Enter your last name\" required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"employeeid\" className=\"form-label\">Employee ID</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"employeeid\" name=\"empid\" onChange={InputEvent} value={data.empid} placeholder=\"Enter your Employee ID\" required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"filetype\" className=\"form-label\">Select your file types</label>\r\n                        <select \r\n                            id=\"filetype\" \r\n                            value={file}   \r\n                            name=\"type\" \r\n                            onChange={(event) => {\r\n                                setFile(event.target.value);\r\n                            }}\r\n                            className=\"form-select\" required> \r\n                            <option selected></option>\r\n                            <option value=\"DOC\">DOC</option>\r\n                            <option value=\"PDF\">PDF</option>\r\n                            <option value=\"MP4\">MP4</option>\r\n                            <option value=\"JPG\">JPG</option>\r\n\r\n                        </select>\r\n                        \r\n                    </div>\r\n                    <div style = {{border : '0px'}}>\r\n                        <label for=\"selectfile\" className=\"form-label\">Upload your file</label>\r\n                        <br />\r\n                        <input \r\n                            type=\"file\" \r\n                            value={name} \r\n                            name=\"filename\" \r\n                            onChange={(event) => {\r\n                                setName(event.target.value);\r\n                            }} \r\n                            id=\"selectfile\" \r\n                            accept={`.${file}`} />\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Any message?</label>\r\n                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"msg\" onChange={InputEvent} value={data.msg} placeholder=\"Enter your message...\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn btn-success\" type=\"submit\">Submit form</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 320,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  div: {\r\n      paddingLeft: '630px',\r\n  }\r\n}));\r\n\r\nexport default function CustomizedInputBase() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.div}>\r\n        <Paper component=\"form\" className={classes.root}>\r\n        {/* <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n            <MenuIcon />\r\n        </IconButton> */}\r\n        <InputBase\r\n            className={classes.input}\r\n            placeholder=\"Search here...\"\r\n            inputProps={{ 'aria-label': 'search here' }}\r\n        />\r\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n            <SearchIcon />\r\n        </IconButton>\r\n        {/* <Divider className={classes.divider} orientation=\"vertical\" />\r\n        <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\r\n            <DirectionsIcon />\r\n        </IconButton> */}\r\n        </Paper>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{paddingLeft: 30}}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Language</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>English</MenuItem>\r\n          <MenuItem value={20}>Latin</MenuItem>\r\n          <MenuItem value={30}>Spanish</MenuItem>\r\n          <MenuItem value={40}>Mandarin</MenuItem>\r\n          <MenuItem value={50}>German</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Form from './Form';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Search from './Search';\r\nimport Language from './Language';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography variant=\"h6\" noWrap>\r\n            Mini variant drawer\r\n          </Typography> */}\r\n          <Search />\r\n          <Language />\r\n          <div style={{paddingLeft: 30}}>\r\n            <SettingsIcon />\r\n          </div>\r\n          <div style={{paddingLeft: 30}}>\r\n            <MeetingRoomIcon />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Dashboard', 'Files'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <DashboardIcon /> : <DescriptionIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        {/* </List>\r\n        <List> */}\r\n          {['News', 'Users'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <NewReleasesIcon /> : <PeopleAltIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['FAQ', 'Help'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <QuestionAnswerIcon /> : <LiveHelpIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n          {['Settings'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <SettingsIcon /> : <SettingsIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Form />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Form from './Form';\nimport * as serviceWorker from './serviceWorker';\nimport Navbar from './Navbar';\n\nReactDOM.render(\n  <>\n    <Navbar/>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}